% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/proxistat.R
\name{proxistat}
\alias{proxistat}
\title{THIS FUNCTION IS NOT YET COMPLETE -
#' Calculate proximity statistic for each location,
quantifying number of and proximities of nearby points.}
\usage{
proxistat(censuspoints, topoints, FIPS.pop, FIPS.score, area = 1, pop = 1,
  radius = 5, units = "miles", decay = "1/d")
}
\arguments{
\item{censuspoints}{A matrix or data.frame with two cols, 'lat' and 'lon' with datum=WGS84 assumed. Decimal degrees. Required.}

\item{topoints}{A matrix or data.frame with two cols, 'lat' and 'lon' with datum=WGS84 assumed. Decimal degrees. Required.}

\item{FIPS.pop}{A vector of strings, where each is the Census FIPS code or ID for the smaller spatial units that have censuspoints, area, & pop information.}

\item{FIPS.score}{A vector of strings designating places that will be assigned scores where each is the Census FIPS code or ID for the larger spatial units that will be given proximity scores.}

\item{area}{A number or vector of numbers giving size of each spatial unit with FIPS.pop, in square miles by default (or square kilometers if units is 'km'). Default is 1.}

\item{pop}{A number or vector of numbers giving population count of each spatial unit. Default is 1.}

\item{radius}{A number giving distance defining nearby, in miles by default (or kilometers if units is 'km'). Default is 5.}

\item{units}{A string that is 'miles' by default, or 'km' for kilometers, specifying units for distances returned and for radius input.}

\item{decay}{A string specifying type of function to use when weighting by distance. Default is '1/d'
For '1/d' decay weighting (default), score is count of points within radius, divided by harmonic mean of distances (when count>0).
Decay weighting also can be '1/d^2' or '1/1' to represent decay by inverse of squared distance, or no decay (equal weighting for all points).}
}
\value{
By default, returns a vector of numbers, the proximity scores, one for each of the censuspoints. Based on miles by default, or km depending on units.
}
\description{
\code{proxistat} returns a proximity statistic (score) for each location (e.g., Census block group), quantifying the number of and proximities of nearby points.
}
\details{
This function returns a vector of proximity scores, one for each location such as a Census block group.
For example, the proximity score may be used to represent how many hazardous waste sites are near any given neighborhood and how close they are.
A proximity score quantifies the proximity and count of nearby points using a specified formula.
Proximity Score = distance-weighted count of points nearby (within search radius)
(or weighted distance to nearest single point if there are none within the radius).
This is the sum of 1/d or 1/d^2 or 1/1, depending on the decay weighting,
where d is the distance from census unit's internal point to user-defined point,
The default proximity score is the count of nearby points divided by the harmonic mean of their distances
(but adjusted when distance is very small, and using the nearest single one if none are nearby). This is the same as the sum of inverse distances.
Nearby is defined as a user-specified parameter, so only points within the specified distance are counted, except if none are nearby,
the single nearest point (at any distance) is used.
The adjustment for small distances ensure that each distance represents roughly the distance to the average resident within a spatial unit like a tract,
rather than just the distance to the center or internal point. The adjustment uses the area of the spatial unit and assumes residents are evenly spread across the unit.
Distance is adjusted in each place if area of each spatial unit is specified, to ensure it represents roughly distance to average resident in the unit:
The distance is capped to be no less than 0.9 * radius of a circle of area equal to census unit's area.
This approximation treats unit as if it were a circle and assumes pop is evenly distributed within that circle's area, since
  0.9r = 0.9 * sqrt(area/pi()) = approx solution to dist from avg point (resident) in circle
to a random point in the circle (facility or point of interest).
Relies on the sp package for the spDists() and SpatialPoints() functions.
IMPORTANT:
Each spatial unit with a FIPS.score is assigned a proximity score that is the population weighted arithmetic
average of scores assigned to the subunits with FIPS.pop, each of which must have pop or use the default of 1 (unweighted).
To create scores for all block groups, with populations and points known for all blocks within each block group,
FIPS.pop is for blocks and FIPS.score is for block groups.
However, it is important that the function be able to know which blocks are in which block groups.
This may for now assume bg and block FIPS conventions, but more flexibly
later could have an input param that is the length of pop and area and censuspoints, with 2 cols, FIPS.pop and FIPS.score.
FIPS.score would have a lot of redundancy and perhaps could be input as a factor in a 2 col data.frame.
}
\note{
**** TO BE DONE:
proxistat(censuspoints=test.from, topoints=test.to,
 FIPS.score=c('012','013'),
 FIPS.pop=c('01245','01346','01347'),
 area=rep(0.2, length(testfrom[,1])), pop=rep(1000, length(testfrom[,1])))
}
\examples{
test.from <- structure(list(fromlat = c(38.9567309094, 38.9507043428),
  fromlon = c(-77.0896572305, -77.0896199948)), .Names = c("lat", "lon"),
  row.names = c("6054762", "6054764"), class = "data.frame")
test.to <- structure(list(tolat = c(38.9575019287, 38.9507043428, 38.9514152435),
  tolon = c(-77.0892818598, -77.0896199948, -77.0972395245)), .Names = c("lat", "lon"),
  class = "data.frame", row.names = c("6054762", "6054763", "6054764"))
}
\seealso{
\code{\link{get.distances}} and \code{\link{get.distances.all}} for distances between points, and
  \code{\link{get.nearest}} for get.nearest() which finds the distance to the single nearest point
  within a specified search radius instead of all topoints.
}
\concept{
proximity
}

