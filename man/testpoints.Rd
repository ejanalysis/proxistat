% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/testpoints.R
\name{testpoints}
\alias{testpoints}
\title{Generate a number of randomly placed points, as latitude/longitude values.}
\usage{
testpoints(n, minlat = 40, maxlat = 42, minlon = -125, maxlon = -70,
  as.df = TRUE)
}
\arguments{
\item{n}{Numeric value, required, TRUE by default. Specifies how many testpoints to return. Must be an integer between zero and 50 million, and not NA.}

\item{minlat}{Default 40. A number that is the minimum latitude in decimal degrees to use for generating random points within some range.}

\item{maxlat}{Default 42. A number that is the maximum latitude in decimal degrees to use for generating random points within some range.}

\item{minlon}{Default -125. A number that is the minimum longitude in decimal degrees to use for generating random points within some range.}

\item{maxlon}{Default -70. A number that is the maximum longitude in decimal degrees to use for generating random points within some range.}

\item{as.df}{Logical, default is TRUE, in which case returns a data.frame, otherwise a matrix.}
}
\value{
By default, returns a data.frame (or matrix if as.df=FALSE) that has 2 columns: lat and lon, in decimal degrees, with 1 row per point.
}
\description{
Generate a number of randomly placed points, as latitude/longitude values.
}
\details{
This function returns n points at random locations using uniform distributions of latitude and longitude values, with specified ranges.
Points are specified using latitude and longitude in decimal degrees.
#' \cr\cr
}
\examples{
testpoints(19,minlat=47,maxlat=48)
get.distances(testpoints(1000),testpoints[10],radius=999,return.rownums=TRUE,return.latlons=TRUE)
}
\seealso{
\code{\link{get.distances.all}} which allows you to get distances between all points,
  \code{\link{get.distances.prepaired}} for finding distances when data are already formatted as pairs of points,
  \code{\link{get.nearest}} which finds the distance to the single nearest point
  within a specified search radius instead of all topoints, and
  \code{\link{proxistat}} which calculates a proximity score for each spatial unit based on distances to nearby points.
}
\concept{
proximity
}

