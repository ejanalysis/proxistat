% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testpoints.R
\name{testpoints}
\alias{testpoints}
\title{Generate a number of randomly placed points, as latitude/longitude values.}
\usage{
testpoints(
  n,
  weighting = "area",
  ST,
  as.df = TRUE,
  minlat = 40,
  maxlat = 42,
  minlon = -125,
  maxlon = -70,
  useblocks = FALSE
)
}
\arguments{
\item{n}{Numeric value, required, TRUE by default. Specifies how many testpoints to return. Must be an integer between zero and 50 million, and not NA.}

\item{weighting}{area or people or geo ... text indicating what type of weighting, by area or people or geo (each block or block group has equal chance).
Default is area - a random square mile not a random residence or random Census geometry.}

\item{ST}{optional vector of 2 letter state abbreviations, to limit it to some state(s). Default is all USA (including PR I think).}

\item{as.df}{Logical, default is TRUE, in which case returns a data.frame, otherwise a matrix.}

\item{minlat}{not used anymore. Default 40. A number that is the minimum latitude in decimal degrees to use for generating random points within some range.}

\item{maxlat}{not used anymore.Default 42. A number that is the maximum latitude in decimal degrees to use for generating random points within some range.}

\item{minlon}{not used anymore.Default -125. A number that is the minimum longitude in decimal degrees to use for generating random points within some range.}

\item{maxlon}{not used anymore.Default -70. A number that is the maximum longitude in decimal degrees to use for generating random points within some range.}

\item{useblocks}{logical, whether to use the approx 11 mill. Census blocks if TRUE (from github package UScensus2010blocks), 
or just the approx 220k block groups (from github package ejscreen) if FALSE which is faster}
}
\value{
By default, returns a data.frame (or matrix if as.df=FALSE) that has 2 columns: lat and lon, in decimal degrees, with 1 row per point.
}
\description{
Generate a number of randomly placed points, as latitude/longitude values.
}
\details{
This function returns n points at random location latitude and longitude values, 
weighted by area or by population count in block group, to be roughly representative of 
either a random location (like throwing a dart, equal weight per square mile of land area - does not include water area in weighting but can return a point in water if bg has internal point in water?!)
or where a randomly selected US resident lives (population weighted).
Points are returned as latitude and longitude in decimal degrees. 
For people weighted, it picks from the Census blockgroup internal points (2010), (or could change to use blocks?)
 which are much more representative of where people live than a random square mile would be.
}
\examples{
testpoints(19,minlat=47,maxlat=48)
get.distances(testpoints(100),testpoints[10],radius=999,return.rownums=TRUE,return.latlons=TRUE)
    
}
\seealso{
\code{\link{get.distances.all}} which allows you to get distances between all points,
  \code{\link{get.distances.prepaired}} for finding distances when data are already formatted as pairs of points,
  \code{\link{get.nearest}} which finds the distance to the single nearest point 
  within a specified search radius instead of all topoints, and 
  \code{\link{proxistat}} which calculates a proximity score for each spatial unit based on distances to nearby points.
}
\concept{proximity}
